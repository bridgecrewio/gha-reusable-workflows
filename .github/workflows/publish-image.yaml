name: publish-image

on:
  workflow_call:
    inputs:
      image_name_dockerhub:
        description: "Image name for Docker Hub"
        required: true
        type: string
      image_name_ghcr:
        description: "Image name for GitHub container registry"
        required: true
        type: string
      image_tag_full:
        description: "Full length image tag"
        required: true
        type: string
      image_tag_short:
        description: "Short length image tag"
        required: true
        type: string

      dockerfile_path:
        description: "Path to Dockerfile"
        default: "Dockerfile"
        required: false
        type: string
      environment:
        description: "GitHub environment"
        default: "release"
        required: false
        type: string
      image_platforms:
        description: "List of target platforms for build"
        default: "linux/amd64,linux/arm64"
        required: false
        type: string
      runner:
        description: "GitHub runner label"
        default: "ubuntu-latest"
        required: false
        type: string
    secrets:
      BC_API_KEY:
        description: "Bridgecrew API key"
        required: true
      DOCKERHUB_USERNAME:
        description: "Docker Hub username"
        required: true
      DOCKERHUB_PASSWORD:
        description: "Docker Hub password"
        required: true

permissions:
  contents: read

jobs:
  publish-image:
    runs-on: ${{ fromJSON(inputs.runner) }}
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write  # Enable OIDC
      packages: write
    env:
      DH_IMAGE_NAME: ${{ inputs.image_name_dockerhub }}
      GHCR_IMAGE_NAME: ${{ inputs.image_name_ghcr }}
      FULL_IMAGE_TAG: ${{ inputs.image_tag_full }}
      SHORT_IMAGE_TAG: ${{ inputs.image_tag_short }}
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608  # v4.1.0
      - uses: sigstore/cosign-installer@11086d25041f77fe8fe7b9ea4e48e3b9192b8f19  # v3.1.2
      - uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3  # v3.0.0
        with:
          platforms: 'arm64,arm'
      - uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226  # v3.0.0
      - name: Login to Docker Hub
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc  # v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc  # v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175  # v4.6.0
        with:
          images: ${{ env.DH_IMAGE_NAME }}
          labels: |
            org.opencontainers.image.authors=Bridgecrew
            org.opencontainers.image.version=${{ env.FULL_IMAGE_TAG }}
      - name: Build and export image to Docker
        # buildx changes the driver to 'docker-container' which doesn't expose the image to the host,
        # so it is built and loaded to Docker and in the next step pushed to the registry
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825  # v4.1.1
        with:
          context: .
          file: ${{ inputs.dockerfile_path }}
          no-cache: true
          load: true
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: ${{ env.DH_IMAGE_NAME }}:${{ env.FULL_IMAGE_TAG }}
      - name: Push Docker image
        id: docker_push
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825  # v4.1.1
        with:
          context: .
          file: ${{ inputs.dockerfile_path }}
          platforms: ${{ inputs.image_platforms }}
          push: true
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            ${{ env.DH_IMAGE_NAME }}:latest
            ${{ env.DH_IMAGE_NAME }}:${{ env.SHORT_IMAGE_TAG }}
            ${{ env.DH_IMAGE_NAME }}:${{ env.FULL_IMAGE_TAG }}
            ${{ env.GHCR_IMAGE_NAME }}:latest
            ${{ env.GHCR_IMAGE_NAME }}:${{ env.SHORT_IMAGE_TAG }}
            ${{ env.GHCR_IMAGE_NAME }}:${{ env.FULL_IMAGE_TAG }}
      - name: Generate SBOM
        continue-on-error: true
        uses: bridgecrewio/checkov-action@master  # use latest and greatest
        with:
          api-key: ${{ secrets.BC_API_KEY }}
          docker_image: ${{ env.DH_IMAGE_NAME }}:${{ env.FULL_IMAGE_TAG }}
          dockerfile_path: ${{ inputs.dockerfile_path }}
          output_format: cyclonedx_json
          output_file_path: cyclonedx.json,
      - name: Sign and attest image
        run: |
          # sign image
          cosign sign -y ${{ env.GHCR_IMAGE_NAME }}@${{ steps.docker_push.outputs.digest }}

          # attest SBOM
          cosign attest -y \
            --type cyclonedx \
            --predicate cyclonedx.json \
            ${{ env.DH_IMAGE_NAME }}@${{ steps.docker_push.outputs.digest }}
          cosign attest -y \
            --type cyclonedx \
            --predicate cyclonedx.json \
            ${{ env.GHCR_IMAGE_NAME }}@${{ steps.docker_push.outputs.digest }}
